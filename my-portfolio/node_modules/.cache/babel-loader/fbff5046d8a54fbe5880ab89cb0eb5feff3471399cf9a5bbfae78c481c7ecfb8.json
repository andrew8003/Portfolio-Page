{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\portfolio\\\\my-portfolio\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport './projects.scss';\n\n// Load the GitHub token from environment variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\n// ProjectCard Component\nfunction ProjectCard({\n  repo\n}) {\n  _s();\n  const [content, setContent] = useState('');\n  const [languages, setLanguages] = useState([]);\n  useEffect(() => {\n    const fetchReadme = async () => {\n      try {\n        const response = await axios.get(`https://raw.githubusercontent.com/${repo.owner.login}/${repo.name}/master/README.md`, {\n          headers: {\n            Authorization: `token ${GITHUB_TOKEN}`\n          }\n        });\n        console.log('Readme API Response Headers:', response.headers); // Log headers for debugging\n        setContent(response.data);\n      } catch (error) {\n        setContent(repo.description || 'No description available');\n      }\n    };\n    const fetchLanguages = async () => {\n      try {\n        const response = await axios.get(`https://api.github.com/repos/${repo.full_name}/languages`, {\n          headers: {\n            Authorization: `token ${GITHUB_TOKEN}`\n          }\n        });\n        console.log('Languages API Response Headers:', response.headers); // Log headers for debugging\n        // Only map over the data without calculating percentages\n        const languageData = Object.entries(response.data).map(([language]) => ({\n          name: language\n        }));\n        setLanguages(languageData);\n      } catch (error) {\n        setLanguages([]);\n      }\n    };\n    fetchReadme();\n    fetchLanguages();\n  }, [repo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: repo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo-description\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        components: {\n          img: () => null\n        },\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"View Repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), languages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-languages\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"languages-bar\",\n        children: languages.map(({\n          name\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-bar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-name\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"language-bar-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n// Projects Component\n_s(ProjectCard, \"8MmqwtAu94oROQTAi91VTB4ENOs=\");\n_c = ProjectCard;\nfunction Projects({\n  repos = []\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: repos.map(repo => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      repo: repo\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Projects;\nexport default Projects;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectCard\");\n$RefreshReg$(_c2, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactMarkdown","jsxDEV","_jsxDEV","GITHUB_TOKEN","process","env","REACT_APP_GITHUB_TOKEN","ProjectCard","repo","_s","content","setContent","languages","setLanguages","fetchReadme","response","get","owner","login","name","headers","Authorization","console","log","data","error","description","fetchLanguages","full_name","languageData","Object","entries","map","language","className","children","fileName","_jsxFileName","lineNumber","columnNumber","components","img","href","html_url","target","rel","length","_c","Projects","repos","id","_c2","$RefreshReg$"],"sources":["C:/Users/andre/Desktop/portfolio/my-portfolio/src/pages/Projects.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport './projects.scss';\r\n\r\n// Load the GitHub token from environment variables\r\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\r\n\r\n// ProjectCard Component\r\nfunction ProjectCard({ repo }) {\r\n  const [content, setContent] = useState('');\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchReadme = async () => {\r\n      try {\r\n        const response = await axios.get(`https://raw.githubusercontent.com/${repo.owner.login}/${repo.name}/master/README.md`, {\r\n          headers: {\r\n            Authorization: `token ${GITHUB_TOKEN}`\r\n          }\r\n        });\r\n        console.log('Readme API Response Headers:', response.headers); // Log headers for debugging\r\n        setContent(response.data);\r\n      } catch (error) {\r\n        setContent(repo.description || 'No description available');\r\n      }\r\n    };\r\n\r\n    const fetchLanguages = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.github.com/repos/${repo.full_name}/languages`, {\r\n          headers: {\r\n            Authorization: `token ${GITHUB_TOKEN}`\r\n          }\r\n        });\r\n        console.log('Languages API Response Headers:', response.headers); // Log headers for debugging\r\n        // Only map over the data without calculating percentages\r\n        const languageData = Object.entries(response.data).map(([language]) => ({\r\n          name: language\r\n        }));\r\n        setLanguages(languageData);\r\n      } catch (error) {\r\n        setLanguages([]);\r\n      }\r\n    };\r\n\r\n    fetchReadme();\r\n    fetchLanguages();\r\n  }, [repo]);\r\n\r\n  return (\r\n    <div className=\"project-card\">\r\n      <h3>{repo.name}</h3>\r\n      <div className=\"repo-description\">\r\n        <ReactMarkdown components={{ img: () => null }}>{content}</ReactMarkdown>\r\n      </div>\r\n      <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">View Repository</a>\r\n      {languages.length > 0 && (\r\n        <div className=\"project-languages\">\r\n          <div className=\"languages-bar\">\r\n            {languages.map(({ name }) => (\r\n              <div key={name} className=\"language-bar-wrapper\">\r\n                <div className=\"language-name\">{name}</div>\r\n                <div className=\"language-bar\">\r\n                  <div className=\"language-bar-fill\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Projects Component\r\nfunction Projects({ repos = [] }) {\r\n  return (\r\n    <div className=\"projects-container\">\r\n      {repos.map(repo => (\r\n        <ProjectCard key={repo.id} repo={repo} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}